# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "CentOS65"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"
  # config.vm.hostname = "test"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # C:\\GitHub\\TeraNaviの部分は各自の環境に合わせて変えてください。
  config.vm.synced_folder "C:\\GitHub\\TeraNavi", "/vagrant_data/TeraNavi"
  config.vm.synced_folder "C:\\GitHub\\TeraNaviAdmin", "/vagrant_data/TeraNaviAdmin"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  vb.memory = "1024"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # Mavenのセットアップ
  config.vm.provision "shell", path: "C:/GitHub/TeraNavi/documents/setup_maven.sh"
  config.vm.provision "shell", inline: <<-SHELL
    sudo yum -y update
    # インストール
    sudo yum install -y wget
    sudo yum install -y java-1.7.0-openjdk.x86_64
    sudo yum install -y java-1.7.0-openjdk-devel.x86_64
    # apacheに関する設定
    sudo yum install -y httpd
    # MySQLに関する設定
    sudo yum -y install http://dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm
    sudo yum -y install mysql-community-server
    sudo touch /var/lib/mysql/mysql.sock
    sudo chown mysql:mysql /var/lib/mysql
    sudo chkconfig mysqld on
    sudo touch /etc/my.cnf
    sudo cp -fp /vagrant_data/TeraNavi/documents/my.cnf /etc/my.cnf
    sudo chmod 644 /etc/my.cnf
    sudo service mysqld start
    echo "mysql table set up"
    sudo mysql -u root -f < /vagrant_data/TeraNavi/documents/delete.sql
    sudo mysql -u root -f < /vagrant_data/TeraNavi/documents/create.sql
    sudo mysql -u root -f < /vagrant_data/TeraNavi/documents/insert.sql
    # ログ出力ディレクトリ
    sudo rm -rf /log/
    sudo mkdir -p /log/
    sudo touch /log/sql.log
    sudo chown -R tomcat:tomcat /log/sql.log
    sudo chmod 770 /log/sql.log
    # デフォルト画像フォルダ
    sudo mkdir -p /tmp/default
    sudo chown -R tomcat:tomcat /tmp
    sudo chmod 770 /tmp/default
    sudo cp -fp /vagrant_data/TeraNavi/documents/default_user_icon.jpg /tmp/default/
    sudo cp -fp /vagrant_data/TeraNavi/documents/TeraNavi_logo.png /tmp/default/

    # tomcatに関する設定
    # if "archived tomcat file" is noting
    if [ ! -d /usr/lib/tomcat7 ]
    then
      echo "downloading tomcat file..."
      sudo wget http://ftp.kddilabs.jp/infosystems/apache/tomcat/tomcat-7/v7.0.68/bin/apache-tomcat-7.0.68.tar.gz
      sudo tar zxvf apache-tomcat-7.0.68.tar.gz
      sudo rm -rf apache-tomcat-7.0.68.tar.gz
      sudo mv -f apache-tomcat-7.0.68 tomcat7
      sudo mv -f tomcat7 /usr/lib
    else
      echo "tomcat Is Already Exists So Need Not Wget"
    fi
    # sudo rm -r /usr/lib/tomcat7/webapps/
    #  ApacheとTomcatの連携設定
    sudo cp -fp /vagrant_data/TeraNavi/documents/httpd.conf /etc/httpd/conf/httpd.conf
    # sudo rm -r /usr/lib/tomcat7/webapps/ROOT/
    sudo useradd -m -d /home/tomcat tomcat
    sudo chown -R tomcat:tomcat /usr/lib/tomcat7
    # favicon設定
    if [ ! -d /usr/lib/tomcat7/webapps/ROOT ]
    then
        sudo mkdir /usr/lib/tomcat7/webapps/ROOT
    else
        sudo rm -rf /usr/lib/tomcat7/webapps/ROOT/*.ico
        echo "ROOT is already exists"
    fi
    sudo cp -fp /vagrant_data/TeraNavi/documents/favicon.ico /usr/lib/tomcat7/webapps/ROOT/favicon.ico
    sudo chown -R tomcat:tomcat /usr/lib/tomcat7/webapps/ROOT/favicon.ico

    sudo -u tomcat /usr/lib/tomcat7/bin/shutdown.sh
    sudo -u tomcat /usr/lib/tomcat7/bin/startup.sh
    sudo cp -fp /vagrant_data/TeraNavi/documents/server.xml /usr/lib/tomcat7/conf/server.xml
    sudo cp -fp /vagrant_data/TeraNavi/documents/TeraNavi.xml /usr/lib/tomcat7/conf/Catalina/localhost/
    sudo cp -fp /vagrant_data/TeraNavi/documents/TeraNaviAdmin.xml /usr/lib/tomcat7/conf/Catalina/localhost/
    sudo service httpd restart
    sudo service iptables stop
    sudo chkconfig iptables off

	sudo rm -rf /usr/lib/tomcat7/webapps/ROOT/*.ico
	sudo cp -fp /vagrant_data/TeraNavi/documents/favicon.ico /usr/lib/tomcat7/webapps/ROOT/favicon.ico

   SHELL
end
